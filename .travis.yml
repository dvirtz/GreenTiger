language: cpp

sudo: false
    
matrix:
  include:
    - os: linux
      addons: {apt: {packages: [g++-6] , sources: [ubuntu-toolchain-r-test]}}
      env:
        - BUILD_TYPE=Release
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
    - os: linux
      addons: {apt: {packages: [clang-3.9,llvm-3.9-dev,libstdc++-6-dev] , sources: [ubuntu-toolchain-r-test,llvm-toolchain-precise-3.9]}}
      env: 
        - BUILD_TYPE=Release 
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
    - os: osx    
      osx_image: xcode8.3
      env: 
        - BUILD_TYPE=Release
        - MATRIX_EVAL="CC=clang && CXX=clang++"
    - os: osx
      osx_image: xcode8.3
      env: 
        - BUILD_TYPE=Release
        - MATRIX_EVAL="brew cask uninstall oclint && brew install gcc6 && CC=gcc-6 && CXX=g++-6"
    
cache:
  directories:
    - $HOME/.local
    - $HOME/.hunter
        
before_install:
  - eval "${MATRIX_EVAL}"
  
install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      mkdir -p $HOME/.local
      CMAKE_URL="http://cmake.org/files/v3.9/cmake-3.9.0-Linux-x86_64.tar.gz"
      if [ ! -e $HOME/.local/bin/cmake ]; then
        echo "CMake not found in the cache, get and extract it..."
        travis_retry curl -L ${CMAKE_URL} \
            | tar -xz -C $HOME/.local --strip-components=1
      else
        echo "Using cached CMake"
      fi
    fi
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew upgrade cmake || brew install cmake
    fi
    
script:
  - cmake . -B_build -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DPOST_BUILD_TESTS=OFF -DHUNTER_JOBS_NUMBER=8 -DCMAKE_VERBOSE_MAKEFILE=ON
  - cmake --build _build && cmake --build _build --target test